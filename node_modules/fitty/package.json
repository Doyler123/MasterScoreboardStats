{
  "_args": [
    [
      {
        "raw": "fitty",
        "scope": null,
        "escapedName": "fitty",
        "name": "fitty",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Jonathan\\node\\MasterScoreboardStats"
    ]
  ],
  "_from": "fitty@latest",
  "_id": "fitty@2.2.6",
  "_inCache": true,
  "_location": "/fitty",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/fitty_2.2.6_1535101297698_0.5924102222930725"
  },
  "_npmUser": {
    "name": "rikschennink",
    "email": "hello@rikschennink.nl"
  },
  "_npmVersion": "6.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "fitty",
    "scope": null,
    "escapedName": "fitty",
    "name": "fitty",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/fitty/-/fitty-2.2.6.tgz",
  "_shasum": "19d6d1f2c95919545e9450e9e2b6b1a4b2a01a5f",
  "_shrinkwrap": null,
  "_spec": "fitty",
  "_where": "C:\\Users\\Jonathan\\node\\MasterScoreboardStats",
  "author": {
    "name": "Rik Schennink",
    "email": "hello@rikschennink.nl",
    "url": "http://rikschennink.nl/"
  },
  "bugs": {
    "url": "https://github.com/rikschennink/fitty/issues"
  },
  "dependencies": {},
  "description": "Snugly resizes text to fit its parent container",
  "devDependencies": {
    "babel-cli": "^6.18.0",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-transform-es2015-modules-umd": "^6.24.1",
    "babel-plugin-transform-object-rest-spread": "^6.23.0",
    "babel-preset-es2015": "^6.24.1",
    "gulp": "^3.9.1",
    "gulp-babel": "^6.1.2",
    "gulp-header": "^1.8.9",
    "gulp-rename": "^1.2.2",
    "gulp-size": "^2.1.0",
    "gulp-uglify": "^3.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Y3N3rQ2oWfPXOrSJwAZmBDaWINNpj6O2YQ2NiORk3kXKCw7gwc/cuBZgtYvr9AWpJqVwboyoswocPcqRmoyxEA==",
    "shasum": "19d6d1f2c95919545e9450e9e2b6b1a4b2a01a5f",
    "tarball": "https://registry.npmjs.org/fitty/-/fitty-2.2.6.tgz",
    "fileCount": 6,
    "unpackedSize": 24797,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbf8lyCRA9TVsSAnZWagAALAEP/0F/6po/gHiBY+gNPBFd\nZ4iCzIiOezDxyHSq2z93lVA29InkXiGXHiMMA4o38VoUEhrNCmHRmWXC/UeP\nq1c1SBch7p4O3OK0b2t0ZwebUD1WNnLDQVHRClYO23XzDfYBfuBbIw4RAyMj\nOCMXDkZth15vL2JvxJ+NCgReBzxVib5MkVG+IciZ+RxK6nUsz/foCjEqEp8o\nUpuF8QQuyhsFC9rAQGNsBIDvwqA4/nQjh8CnF/jATNdhCVFC+aAfW/7p8SrE\nvBFceLDJ5sBDrgnEcw7w1tbwVEOR8eZxaS0LBLQ/r7oNAeKqG1Uqb3IrCqdj\nvJoGZJsMTf4odgfFpoUJBXw3XYp3kfQns68+yraZEwHnH/xh7ZIf3uMQoCU8\nf5xL9XeRQiYG6RNItBsEb2dCIixfghlShwHe++YWu9ByNlvV2iGjCgJZCTt3\nW9KCU7Ooo/3sxN2+xXjvJfLL0szFzakG0YfV6mMXRtnP1YUtrhpA0hG/2RFv\n0s8ogrArEa7w2FAu9nLBtvcuIOYUf+LTGS82S4wLxAHVN8am/OZWEnSb72SB\nWYusLKg9SOKMa/Ir2+wcALuvuCxAGShIaNPTAmZhsBl31MchUyVnv8Bt6Ar6\nslH78q0xDwq9RtoWcRTvWann/bTMV91ElmmDyo7to6dI6+5o8XG64JF92BLn\nnpFk\r\n=fVDU\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "d281cb8e371e68ea1ae952c980362f85c717647c",
  "homepage": "https://github.com/rikschennink/fitty",
  "keywords": [
    "fit",
    "responsive",
    "text",
    "font",
    "rescale",
    "resize"
  ],
  "license": "MIT",
  "main": "dist/fitty.module.js",
  "maintainers": [
    {
      "name": "rikschennink",
      "email": "hello@rikschennink.nl"
    }
  ],
  "name": "fitty",
  "optionalDependencies": {},
  "readme": "![Fitty Logo](https://raw.githubusercontent.com/rikschennink/fitty/gh-pages/assets/fitty.gif)\n\n# Fitty, Snugly text resizing \n\nScales up (or down) text so it fits perfectly to its parent container. \n\nIdeal for flexible and responsive websites.\n\n[![License: MIT](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/rikschennink/fitty/blob/gh-pages/LICENSE)\n[![npm version](https://badge.fury.io/js/fitty.svg)](https://badge.fury.io/js/fitty)\n[![Donate with PayPal](https://img.shields.io/badge/donate-PayPal.me-pink.svg)](https://www.paypal.me/rikschennink/5)\n\n\n## Features\n\n- No dependencies\n- Easy setup\n- Optimal performance by grouping DOM read and write operations\n- Works with WebFonts (see example below)\n- Min and max font sizes\n- Support for MultiLine\n- Auto update when viewport changes\n- Monitors element subtree and updates accordingly\n\n\n## Time to learn ES6?\n\nFitty is written in ES6.\n\nIf you want to learn how to write modern ES6 JavaScript as well, I highly recommend [ES6 for Everyone](http://bit.ly/es6-course) by Wes Bos. \n\n\n## Installation\n\nInstall from npm:\n\n```\nnpm install fitty --save\n```\n\nOr download `dist/fitty.min.js` and include the script on your page like shown below.\n\n\n## Usage\n\nRun fitty like shown below and pass an element reference or a querySelector. For best performance include the script just before the closing `</body>` element.\n\n```html\n<div id=\"my-element\">Hello World</div>\n\n<script src=\"fitty.min.js\"></script>\n<script>\nfitty('#my-element');\n</script>\n```\n\n\nThe following options are available to pass to the `fitty` method.\n\nOption             | Default       | Description              \n-------------------|---------------|------------------------------------------------\n`minSize`          | `16`          | The minimum font size in pixels\n`maxSize`          | `512`         | The maximum font size in pixels\n`multiLine`        | `true`        | Wrap lines when using minimum font size.\n`observeMutations` | `MutationObserverInit` | Rescale when element contents is altered. Is set to false when `MutationObserver` is not supported. Pass a custom MutationObserverInit config to optimize monitoring based on your project. By default contains the MutationObserverInit configuration below or `false` based on browser support. \n\n\nDefault MutationObserverInit configuration:\n```javascript\n{\n  subtree: true,\n  childList: true,\n  characterData: true\n}\n````\n\nYou can pass custom arguments like this:\n\n```javascript\nfitty('#my-element', {\n  minSize: 12,\n  maxSize: 300\n});\n```\n\n\nThe `fitty` function returns a single or multiple Fitty instances depending on how it's called. If you pass a query selector it will return an array of Fitty instances, if you pass a single element reference you'll receive back a single Fitty instance. \n\n\nMethod           | Description\n-----------------|---------------\n`fit()`          | Force a redraw of the current fitty element\n`unsubscribe()`  | Remove the fitty element from the redraw loop and restore it to its original state\n\n\nProperties       | Description\n-----------------|---------------\n`element`        | Reference to the related element \n\n\n```javascript\nvar fitties = fitty('.fit');\n\n// get element reference of first fitty\nvar myFittyElement = fitties[0].element;\n\n// force refit\nfitties[0].fit();\n\n// unsubscribe from fitty, restore to original state\nfitties[0].unsubscribe();\n```\n\n\nFitty dispatches an event named `\"fit\"` when a fitty is fitted. \n\nEvent            | Description\n-----------------|---------------\n`\"fit\"`          | Fired when the element has been fitted to the parent container.\n\nThe `detail` property of the event contains an object which exposes the font size `oldValue` the `newValue` and the `scaleFactor`.\n\n```js\nmyFittyElement.addEventListener('fit', function(e) {\n\n  // log the detail property to the console\n  console.log(e.detail);\n\n});\n```\n\n\nThe `fitty` function itself also exposes some static options and methods:\n\nOption                     | Default       | Description              \n---------------------------|---------------|------------------------------------------------\n`fitty.observeWindow`      | `true`        | Listen to the \"resize\" and \"orientationchange\" event on the window object and update fitties accordingly.\n`fitty.observeWindowDelay` | `100`         | Redraw debounce delay in milliseconds for when above events are triggered.\n\nMethod                     | Description\n---------------------------|---------------\n`fitty.fitAll()`           | Refits all fitty instances to match their parent containers. Essentially a request to redraw all fitties.\n\n\n## Performance\n\nFor optimal performance add a CSS selector to your stylesheet that sets the elements that will be resized to have `white-space:nowrap` and `display:inline-block`. If not, Fitty will detect this and will have to restyle the elements automatically, resulting in a slight performance penalty.\n\nSuppose all elements that you apply fitty to are assigned the `fit` class name, add the following CSS selector to your stylesheet:\n\n```css\n.fit {\n  display: inline-block;\n  white-space: nowrap;\n}\n```\n\nShould you only want to do this when JavaScript is available, add the following to the `<head>` of your web page.\n\n```html\n<script>document.documentElement.classList.add('js');</script>\n```\n\nAnd change the CSS selector to:\n\n```css\n.js .fit {\n  display: inline-block;\n  white-space: nowrap;\n}\n```\n\n\n## Do Not Upscale Text\n\nFitty calculates the difference in width between the text container and its parent container. If you use CSS to set the width of the text container to be equal to the parent container it won't scale the text.\n\nThis could be achieved by forcing the text container to be a block level element with `display: block !important` or setting its width to 100% with `width: 100%`.\n\n\n## Custom Fonts\n\nFitty does not concern itself with custom fonts. But it will be important to redraw Fitty text after a custom font has loaded (as previous measurements are probably incorrect at that point).\n\nIf you need to use fitty on browsers that don't have [CSS Font Loading](http://caniuse.com/#feat=font-loading) support (Edge and Internet Explorer) you can use the fantastic [FontFaceObserver by Bram Stein](https://github.com/bramstein/fontfaceobserver) to detect when your custom fonts have loaded.\n\nSee an example custom font implementation below. This assumes fitty has already been called on all elements with class name `fit`.\n\n```html\n<style>\n/* Only set the custom font if it's loaded and ready */\n.fonts-loaded .fit {\n  font-family: 'Oswald', serif;\n}\n</style>\n<script>\n(function() {\n\n  // no promise support (<=IE11)\n  if (!('Promise' in window)) {\n    return;\n  }\n\n  // called when all fonts loaded\n  function redrawFitty() {\n    document.documentElement.classList.add('fonts-loaded');\n    fitty.fitAll();\n  }\n\n  // CSS Font Loading API \n  function native() {\n\n    // load our custom Oswald font\n    var fontOswald = new FontFace('Oswald', 'url(assets/oswald.woff2)', {\n      style:'normal',\n      weight:'400'\n    });\n    document.fonts.add(fontOswald);\n    fontOswald.load();\n\n    // if all fonts loaded redraw fitty\n    document.fonts.ready.then(redrawFitty);\n  }\n\n  // FontFaceObserver\n  function fallback() {\n\n    var style = document.createElement('style');\n    style.textContent = '@font-face { font-family: Oswald; src: url(assets/oswald.woff2) format(\"woff2\");}'\n    document.head.appendChild(style);\n\n    var s = document.createElement('script');\n    s.src = 'https://cdnjs.cloudflare.com/ajax/libs/fontfaceobserver/2.0.13/fontfaceobserver.standalone.js';\n    s.onload = function() {\n      new FontFaceObserver('Oswald').load().then(redrawFitty);    \n    };\n    document.body.appendChild(s);\n  }\n\n  // Does the current browser support the CSS Font Loading API?\n  if ('fonts' in document) {\n    native();\n  }\n  else {\n    fallback();\n  }\n\n}());\n</script>\n```\n\n\n## Notes\n\n- Will not work if the fitty element is not part of the DOM.\n\n- If the parent element of the fitty element has horizontal padding the width calculation will be incorrect. You can fix this by wrapping the fitty element in another element.\n\n```html\n<!-- Problems -->\n<div style=\"padding-left:100px\">\n  <h1 class=\"fit\">I'm a wonderful heading</h1>\n</div>\n```\n\n```html\n<!-- No more problems -->\n<div style=\"padding-left:100px\">\n  <div><h1 class=\"fit\">I'm a wonderful heading</h1></div>\n</div>\n```\n\n\n\n## Tested\n\n- Modern browsers\n- IE 10+\n\n\n## Versioning\n\nVersioning follows [Semver](http://semver.org).\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rikschennink/fitty.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "2.2.6"
}
